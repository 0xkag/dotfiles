# vim: et sw=4 ts=4 ft=sh:

[ -n ${DOTFILES_DEBUG:-""} ] && echo "dotfiles: shellinteractive"

source ~/.dotfiles/_shell/shellenv
source ~/.dotfiles/_shell/shellcolors

# shell-specific options; SHELL is set by login(1) normally but we make sure
# it's set to whatever shell is actually in use ($SHELL is used by tmux also
# which is primarily what we're interested in by setting it here; although
# others may use it too)

if ! $IS_BASH && ! $IS_ZSH; then
    echo "warning: shell not supported" >&2
fi

if $IS_BASH; then
        shopt -s autocd
        shopt -s checkjobs
        shopt -s checkwinsize
        shopt -s globstar
        shopt -s histappend
        export HISTCONTROL=ignoreboth
        export HISTSIZE=10000
        export HISTFILESIZE=20000
        export PS1="\u@\h:\w\$ "
        export SHELL=$(which bash)
elif $IS_ZSH; then
        # most of my zsh options are set by oh-my-zsh
        export SHELL=$(which zsh)
fi

# term

if [[ "$(uname -o 2> /dev/null || uname)" == "FreeBSD" ]]; then
    # FreeBSD colors misbehave for me when xterm-256color, for example, but
    # not for xterm
    export TERM=${TERM/-*/}
fi

# editor

if command -v emacsclient &> /dev/null; then
    export EDITOR="emacsclient -a vim"
else
    export EDITOR=vim
fi

# pager

export PAGER=less

# aliases (and overrides)

alias h="history"
alias j="jobs"

# ... ls

if ! $IS_ZSH; then
    # oh-my-zsh handles ls / gls color automatically
    ls --color &> /dev/null && COLOR="--color=auto" || COLOR=""
    alias ls="ls -CF $COLOR"
else
    LS="$(alias ls)"
    LS="${LS/#ls=\'/}"
    LS="${LS/%\'/}"
    alias ls="$LS -CF"
fi

alias l='ls -CF'
alias ll='ls -l'
alias la='ls -lA'

# ... navigation

alias up='cd ..'

# ... bsd / linux compat

command -v gnugetopt &> /dev/null && \
    alias getopt='/usr/local/bin/gnugetopt'

command -v sha1sum &> /dev/null || \
    alias sha1sum='sha1 -r'

# ... zsh global aliases

if $IS_ZSH; then
    alias -g ,h="| head"
    alias -g ,t="| tail"
    alias -g ,g="| egrep"
    alias -g ,gi="| egrep -i"
    alias -g ,l="| less"
    alias -g ,ll="2>&1 | less"
    alias -g ,ca="2>&1 | cat -A"
    alias -g ,cs="2>&1"
    alias -g ,ne="2> /dev/null"
    alias -g ,nul="> /dev/null 2>&1"
    alias -g ,null="> /dev/null 2>&1"
fi

# ... man

man() {
    env \
        LESS_TERMCAP_mb=$'\e[1;31m' \
        LESS_TERMCAP_md=$'\e[1;31m' \
        LESS_TERMCAP_me=$'\e[0m' \
        LESS_TERMCAP_se=$'\e[0m' \
        LESS_TERMCAP_so=$'\e[1;44;33m' \
        LESS_TERMCAP_ue=$'\e[0m' \
        LESS_TERMCAP_us=$'\e[1;32m' \
            man "$@"
}

# fzf

export FZF_DEFAULT_OPTS=""\
"--bind='"\
"ctrl-o:execute(less -f {}),"\
"ctrl-y:execute-silent(echo {} | clip-in)+abort"\
"'"

export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"

export FZF_CTRL_R_OPTS=""\
"--reverse "\
"--preview 'echo {}' "\
"--preview-window 'down:3:hidden:wrap' "\
"--bind='"\
"ctrl-y:execute-silent(echo {2..-1} | clip-in)+abort,"\
"?:toggle-preview"\
"'"

export FZF_CTRL_T_OPTS=""\
"--preview '(pygmentize -g {} 2> /dev/null || cat {} || tree -C {}) 2> /dev/null | head -200'"

if $IS_BASH; then
    [ -f ~/.fzf.bash ] && source ~/.fzf.bash
elif $IS_ZSH; then
    [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
fi

source ~/.dotfiles/fzf/man.fzf

# less

source ~/.dotfiles/less/less
export LESS

# pyenv

command -v pyenv &> /dev/null && eval "$(pyenv init --path)"
command -v pyenv &> /dev/null && eval "$(pyenv virtualenv-init -)"

# warp

if command -v wd &> /dev/null; then
    cwd="$(pwd)"
    cd ~ && wd -q add! home
    cd ~/.dotfiles && wd -q add! dot
    cd ~/.ssh && wd -q add! ssh
    { cd ~/root 2> /dev/null || cd ~/.root 2> /dev/null; } && wd -q add! root
    { cd ~/wc 2> /dev/null || cd ~/local/wc 2> /dev/null; } && wd -q add! wc
    cd "$cwd"
fi

# asdf

if [ -f ~/.dotfiles/_lib/asdf/asdf.sh ]; then
    source ~/.dotfiles/_lib/asdf/asdf.sh
    source ~/.dotfiles/_lib/asdf/completions/asdf.bash
fi

# awscli completion

export AWS_PAGER=""

if $IS_BASH; then
    # complete -C $(which aws_completer) aws
    # TODO
    true
elif $IS_ZSH; then
    # TODO
    # [[ $(which aws_zsh_completer.sh) =~ ".*pyenv/shims.*" ]] && {
    #     [ -r $(pyenv which aws_zsh_completer.sh) ] && \
    #         source $(pyenv which aws_zsh_completer.sh)
    # } || {
    #     [ -r $(which aws_zsh_completer.sh) ] && \
    #         source $(which aws_zsh_completer.sh)
    # }
    true
fi

# kubectl completion

if command -v kubectl &> /dev/null; then
    if $IS_BASH; then
        source <(kubectl completion bash)
    else
        source <(kubectl completion zsh)
    fi
fi

# site customizations

site_shellinteractive=$HOME/.dotfiles/_sites/current/_shell/shellinteractive
[ -f $site_shellinteractive ] && source "$site_shellinteractive"
unset site_shellinteractive

