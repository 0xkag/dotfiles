#!/usr/bin/env python
# vim: et sw=4 ts=4:

import os
import sys

def relink(target, linkname):
    target = os.path.expanduser(target)
    linkname = os.path.expanduser(linkname)
    if os.path.exists(linkname):
        if os.path.islink(linkname):
            os.unlink(linkname)
        else:
            raise Exception('%s is not a symlink' % linkname)
    os.symlink(target, linkname)

def mkdir(p):
    try:
        os.mkdirs(os.path.expanduser(p))
    except:
        pass

def main():
    # <top level mkdirs>

    mkdir('~/.config')
    mkdir('~/.fonts')
    mkdir('~/.root')

    # <fonts>

    mkdir('~/.fonts/adobe-fonts')
    relink('~/.dotfiles/_lib/source-code-pro', '~/.fonts/adobe-fonts/source-code-pro')
    os.system('fc-cache -f -v ~/.fonts/adobe-fonts/source-code-pro')

    # alpine

    print 'remember to run alpine/install'

    # ansifilter

    print 'remember to run ansifilter/install'

    # bash

    relink('.dotfiles/bash/bashrc', '~/.bashrc')
    relink('.dotfiles/bash/bash_profile', '~/.bash_profile')

    # bup

    print 'remember to run bup/install'

    # compton

    print 'remember to run compton/install'

    # emacs

    print 'remember to run one of emacs/install-*'

    # flake8

    relink('~/.dotfiles/flake8/flake8', '~/.config/flake8')

    # fzf

    print 'remember to run fzf/install'

    # gdb

    relink('.dotfiles/gdb/gdbinit', '~/.gdbinit')

    # git

    relink('.dotfiles/git/gitconfig', '~/.gitconfig')
    print 'remember to run git/install'

    # global

    print 'remember to run global/install'

    # gnome

    print 'remember to run gnome/load'

    # i3

    relink('.dotfiles/i3', '~/.i3')
    relink('.dotfiles/i3/i3blocks.conf', '~/.i3blocks.conf')

    # iftop

    relink('.dotfiles/iftop/iftoprc', '~/.iftoprc')

    # less

    # ... sourced in shell/shellinteractive

    # maven

    print 'remember to run maven/install'

    # nodejs

    relink('.dotfiles/nodejs/npmrc', '~/.npmrc')
    print 'remember to run nodejs/install'

    # pandoc

    print 'remember to run pandoc/install'

    # pip

    mkdir('~/.config/pip')
    relink('~/.dotfiles/pip/pip.conf', '~/.config/pip/pip.conf')

    # pyenv

    relink('~/.dotfiles/_lib/pyenv-virtualenv',
           '~/.dotfiles/_lib/pyenv/plugins/pyenv-virtualenv')

    # readline

    relink('.dotfiles/readline/inputrc', '~/.inputrc')

    # spacemacs

    relink('.dotfiles/_lib/spacemacs', '~/.emacs.d')
    relink('.dotfiles/spacemacs/spacemacs', '~/.spacemacs')

    # ssh

    relink('~/.dotfiles/ssh/config', '~/.ssh/config')

    # sshrc

    relink('.dotfiles/sshrc', '~/.sshrc.d')
    relink('.dotfiles/sshrc/sshrc', '~/.sshrc')

    # stack

    mkdir('~/.stack')
    relink('~/.dotfiles/stack/config.yaml', '~/.stack/config.yaml')
    print 'remember to run stack/install'

    # tarsnap

    print 'remember to run tarsnap/install'

    # tmux

    relink('.dotfiles/tmux/tmux.conf', '~/.tmux.conf')
    print 'remember to run tmux/install'

    # vim

    relink('.dotfiles/vim/vimrc', '~/.vimrc')
    print 'remember to run vim/install'

    # x11

    print 'remember to run x11/install'

    # zsh

    relink('.dotfiles/zsh/zshrc', '~/.zshrc')

if __name__ == '__main__':
    sys.exit(main())

