#!/usr/bin/env bash
# vim: set et sw=4 ts=4:

set -e
set -u

# for freebsd

if command -v gdate &> /dev/null; then
    DATE=gdate
else
    DATE=date
fi

# for freebsd; needs getopt package installed

if command -v /usr/local/bin/getopt &> /dev/null; then
    GETOPT=/usr/local/bin/getopt
else
    GETOPT=getopt
fi

iso=true
date=
precision=
utc=true

if [[ $0 = *iso8601 ]]; then
    iso=true
else
    iso=false
fi

argv=$($GETOPT \
         -o 'd:e:lp:u' \
         -l 'date:' \
         -l 'epoch:' \
         -l 'local' \
         -l 'precision:' \
         -l 'utc' \
         -- \
         "$@")

eval set -- "$argv"

while true; do
    case "$1" in
        -d|--date|-e|--epoch)
            date=$2
            shift 2
            ;;
        -l|--local)
            utc=false
            shift
            ;;
        -p|--precision)
            precision=$2
            shift 2
            ;;
        -u|--utc)
            utc=true
            shift
            ;;
        --)
            shift
            break
            ;;
    esac
done

if [[ -n $date ]]; then
    precision=${precision:-seconds}
else
    precision=${precision:-ns}
fi

dateargs=()

if $iso; then
    dateargs+=("--iso-8601=$precision")
else
    dateargs+=("+%s")
fi

if [[ -n $date ]]; then
    dateargs+=("-d")
    dateargs+=("$date")
fi

if $utc; then
    dateargs+=("-u")
fi

$DATE "${dateargs[@]}" |
    sed -e 's/+00:\{0,1\}00$/Z/g' | \
    sed -e 's/\([+-]\)\(..\):\(..\)/\1\2\3/g'

