# terminal stuff

# https://github.com/tmux/tmux/issues/696
#set -g default-terminal "screen-256color"
#set -g -a terminal-overrides ",xterm*:Tc"
#set -s default-terminal "tmux-256color"
#set -as terminal-overrides ",*-256color:Tc"
set -s default-terminal "tmux-256color"
set -as terminal-overrides ",xterm*:Tc"

# set global environment variable TMUX_VERSION
#
# awk -v tv="master"  'BEGIN { print tv >= 2.4 }' # should print 1
# awk -v tv="master"  'BEGIN { print tv <= 2.1 }' # should print 0
# awk -v tv="2.3"     'BEGIN { print tv >= 2.4 }' # should print 0
# awk -v tv="2.3-rc3" 'BEGIN { print tv >= 2.4 }' # should print 0
# awk -v tv="2.4"     'BEGIN { print tv >= 2.4 }' # should print 1
# awk -v tv="2.4-rc3" 'BEGIN { print tv >= 2.4 }' # should print 1

run-shell "tmux setenv -g TMUX_VERSION $($_ -V | cut -c 6-)"

# vi mode

set -g mode-keys vi

# UTF-8

if-shell 'awk -v tv=$TMUX_VERSION "BEGIN { exit 1 - (tv <= 2.1) }"' \
  "\
  set -g utf8; \
  set -g status-utf8 on; \
  set -g mouse-utf8 on; \
  "

# make these environment variables available to tmux show-env when launching a
# new session or attaching an old one; see also bin/tmux-sync-environment

set -g update-environment \
  "\
  DISPLAY \
  GPG_AGENT_INFO \
  SSH_AGENT_PID \
  SSH_ASKPASS \
  SSH_AUTH_SOCK \
  SSH_CONNECTION \
  TERM \
  WINDOWID \
  XAUTHORITY \
  "

# delay for tmux to determine if input is part of a function or meta sequence

set -s escape-time 100

# window titles

set -g automatic-rename on
# set -g allow-rename off
# TODO

# control keys

set-window-option -g xterm-keys on

# normal keybindings

# ... nesting

# ... ... C-b b -- second level
# ... ... C-b b b -- third level

bind-key b send-prefix

# ... pane movement

# TODO
bind-key C-j command-prompt -p "join pane from:" "join-pane -h -s '%%'"
bind-key C-s command-prompt -p "send pane to:" "join-pane -h -t '%%'"

# ... alternate split mappings

#bind-key v split-window -h
#unbind-key s
#bind-key s split-window -v

# ... reload ~/.tmux.conf

bind-key R source-file ~/.tmux.conf\; display "reloaded tmux.conf"

# ... home/end

bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"

# ... paste

unbind-key p
bind-key p paste-buffer

# copy-mode / scrollback

set -s set-clipboard off
set -g history-limit 65536

# ... vi copy mode keys

if-shell 'awk -v tv=$TMUX_VERSION "BEGIN { exit 1 - (tv >= 2.4) }"' \
  "\
  bind-key -T copy-mode-vi v send-keys -X begin-selection; \
  bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle; \
  bind-key -T copy-mode-vi y send-keys -X copy-selection; \
  bind-key -T copy-mode-vi Home send-keys -X start-of-line; \
  bind-key -T copy-mode-vi End send-keys -X end-of-line; \
  bind-key -T copy-mode-vi C-y send-keys -X copy-pipe-and-cancel 'cat >> ~/tmux.out'\\; display 'appended to ~/tmux.out'; \
  bind-key -T copy-mode-vi M-y send -X copy-pipe-and-cancel 'clip-in'\\; display 'copied to system clipboard'; \
  bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'clip-in'\\; display 'copied to system clipboard'; \
  bind-key -T choice-mode-vi h send-keys -X tree-collapse; \
  bind-key -T choice-mode-vi l send-keys -X tree-expand; \
  bind-key -T choice-mode-vi H send-keys -X tree-collapse-all; \
  bind-key -T choice-mode-vi L send-keys -X tree-expand-all; \
  " \
  "\
  bind-key -t vi-copy v begin-selection; \
  bind-key -t vi-copy C-v rectangle-toggle; \
  bind-key -t vi-copy y copy-selection; \
  bind-key -t vi-copy Home start-of-line; \
  bind-key -t vi-copy End end-of-line; \
  bind-key -t vi-copy C-y copy-pipe 'cat >> ~/tmux.out'; \
  bind-key -t vi-copy M-y copy-pipe 'clip-in'; \
  bind-key -t vi-copy MouseDragEnd1Pane copy-pipe 'clip-in'; \
  bind-key -t vi-choice h tree-collapse; \
  bind-key -t vi-choice l tree-expand; \
  bind-key -t vi-choice H tree-collapse-all; \
  bind-key -t vi-choice L tree-expand-all; \
  "

# ... prefix C-y append buffer to ~/tmux.out
# ... prefix C copy buffer to clipboard
# ... prefix P set buffer from clipboard

bind-key C-y run-shell 'tmux show-buffer >> ~/tmux.out'; \
bind-key C run-shell 'tmux show-buffer | clip-in'; \
bind-key P run-shell 'tmux set-buffer \"$(clip-out)\"; tmux paste-buffer'; \

# ... save entire scrollback to a file with default filename

bind-key S command-prompt \
  -p 'save scrollback to filename:' \
  -I '~/tmux-#h-#S-#I-#P-#{window_activity}.history' \
  'capture-pane -S -; save-buffer -a %1; delete-buffer'

# mouse

if-shell 'awk -v tv=$TMUX_VERSION "BEGIN { exit 1 - (tv >= 2.1) }"' \
  "\
  bind m \
    set -g mouse on\\; \
    display 'mouse: on'; \
  bind M \
    set -g mouse off\\; \
    display 'mouse: off'; \
  " \
  "\
  bind m \
    set -g mode-mouse on\\; \
    set -g mouse-resize-pane on\\; \
    set -g mouse-select-pane on\\; \
    set -g mouse-select-window on\\; \
    display 'mouse: on'; \
  bind M \
    set -g mode-mouse off\\; \
    set -g mouse-resize-pane off\\; \
    set -g mouse-select-pane off\\; \
    set -g mouse-select-window off\\; \
    display 'mouse: off'; \
  "

# status bar

# ... hostname, loadavg, time (note: this doesn't highlight right in vim)

set -g status-right '\
#[fg=blue]#{host_short} \
#[fg=black]load #[fg=blue]#(loadavg) \
#[fg=black]time #[fg=blue]#(datetime-iso8601 --local --precision=seconds)\
'

set -g status-right-length 150

# look and feel

if-shell 'awk -v tv=$TMUX_VERSION "BEGIN { exit 1 - (tv < 2.9) }"' \
  "\
  set -g pane-border-fg green; \
  set -g pane-active-border-fg brightred; \
  set -g window-status-current-bg blue; \
  set -g window-status-current-fg white; \
  " \
  "\
  set -g pane-border-style fg=green; \
  set -g pane-active-border-style fg=brightred; \
  set -g window-status-current-style bg=blue,fg=white; \
  "

